version: '3.7'

services:
  postgres_accounts:
    image: postgres:15.3
    container_name: accounts_db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=accounts_db
    volumes:
      - accounts_pgdata:/var/lib/postgresql/data
      - ./sql-scripts/created_accounts_db.sql:/docker-entrypoint-initdb.d/created_accounts_db.sql
    networks:
      - postgres-network
    restart: always

  postgres_transactions:
    image: postgres:15.3
    container_name: transactions_db
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=transactions_db
    volumes:
      - transactions_data:/var/lib/postgresql/data
      - ./sql-scripts/created_transactions_db.sql:/docker-entrypoint-initdb.d/created_transactions_db.sql
    networks:
      - postgres-network
    restart: always

  postgres_keycloak:
    image: postgres:15.3
    container_name: keycloack_db
    ports:
      - "5436:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=keycloack_db
    volumes:
      - keycloak_data:/var/lib/postgresql/data
      - ./sql-scripts/created_keycloack_db.sql:/docker-entrypoint-initdb.d/created_keycloack_db.sql
    networks:
      - postgres-network
    restart: always

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - kafka

  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "2181:2181"

  kc:
    image: jboss/keycloak
    container_name: keycloak
    environment:
      KC_DB_URL: jdbc:postgresql://keycloack_db:5432/keycloack_db
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: root
      KC_DB_SCHEMA: public
      KC_FEATURES: preview
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8484:8080"
    depends_on:
      - postgres_keycloak

  discovery-service:
    build:
      context: ./discovery-service
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - postgres-network

  gateway-service:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    ports:
      - "8222:8222"
    depends_on:
      - discovery-service
      - kafka
      - kc
    networks:
      - postgres-network
      - kafka-net

  account-service:
    build:
      context: ./account-service
      dockerfile: Dockerfile
    depends_on:
      - postgres_accounts
      - gateway-service
      - discovery-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://accounts_db:5432/accounts_db
      - DATABASE_PASSWORD=root
      - DATABASE_USERNAME=admin
    networks:
      - postgres-network
      - kafka-net

  transaction-service:
    build:
      context: ./transaction-service
      dockerfile: Dockerfile
    depends_on:
      - postgres_transactions
      - gateway-service
      - discovery-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://transactions_db:5432/transactions_db
      - DATABASE_PASSWORD=root
      - DATABASE_USERNAME=admin
    networks:
      - postgres-network
      - kafka-net


networks:
  postgres-network:
    driver: bridge
  kafka-net:
    driver: bridge

volumes:
  accounts_pgdata:
  transactions_data:
  keycloak_data: